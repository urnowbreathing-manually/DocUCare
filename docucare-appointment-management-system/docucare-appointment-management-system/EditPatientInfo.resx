<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>